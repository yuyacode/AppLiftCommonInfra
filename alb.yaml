AWSTemplateFormatVersion: '2010-09-09'
Description: >-
  Creates a Public ALB, Internal ALB, Listener, ListenerRule, TargetGroup.
  The ALB is deployed across multiple Availability Zones.

Parameters:
  NetworkStackName:
    Type: String
    Description: Name of the stack that manages the resources of the network system
  SGStackName:
    Type: String
    Description: Name of the stack that manages the resources of the security group
  # DomainCertificateStackName:
  #   Type: String
  #   Description: Name of the stack that manages the resources of domain and certificate

Resources:
  # PublicALB:
  #   Type: AWS::ElasticLoadBalancingV2::LoadBalancer
  #   Properties:
  #     IpAddressType: ipv4
  #     Scheme: internet-facing
  #     SecurityGroups:
  #       - Fn::ImportValue: !Sub "${SGStackName}-PublicAlbSGId"
  #     Subnets:
  #       - Fn::ImportValue: !Sub "${NetworkStackName}-PublicSubnet1aId"
  #       - Fn::ImportValue: !Sub "${NetworkStackName}-PublicSubnet1cId"
  #   Metadata:
  #     cfn_nag:
  #       rules_to_suppress:
  #         - id: W52
  #           reason: "Disabled due to low current user traffic and no need for traffic analysis at this time; cost and operational overhead considerations."
  # PublicALBListener:
  #   Type: AWS::ElasticLoadBalancingV2::Listener
  #   Properties:
  #     Certificates:
  #       - CertificateArn: !ImportValue
  #           Fn::Sub: "${DomainCertificateStackName}-CertificateArn-AppLiftCom"
  #     DefaultActions:
  #       - Type: fixed-response
  #         FixedResponseConfig:
  #           ContentType: text/plain
  #           MessageBody: "Resource not found. Please use a valid path like /company or /student."
  #           StatusCode: "404"
  #     LoadBalancerArn: !Ref PublicALB
  #     Port: 443
  #     Protocol: HTTPS
  #     SslPolicy: ELBSecurityPolicy-TLS13-1-2-Res-2021-06
  # CompanyPathRule:
  #   Type: AWS::ElasticLoadBalancingV2::ListenerRule
  #   Properties:
  #     Actions:
  #       - Type: forward
  #         TargetGroupArn: !Ref CompanyTargetGroup
  #     Conditions:
  #       - Field: path-pattern
  #         PathPatternConfig:
  #           Values: ["/company*"]
  #     ListenerArn: !Ref PublicALBListener
  #     Priority: 1
  # StudentPathRule:
  #   Type: AWS::ElasticLoadBalancingV2::ListenerRule
  #   Properties:
  #     Actions:
  #       - Type: forward
  #         TargetGroupArn: !Ref StudentTargetGroup
  #     Conditions:
  #       - Field: path-pattern
  #         PathPatternConfig:
  #           Values: ["/student*"]
  #     ListenerArn: !Ref PublicALBListener
  #     Priority: 2
  CompanyTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /company/login
      HealthCheckPort: traffic-port
      Matcher:
        HttpCode: "200"
      Port: 8081
      Protocol: HTTP
      Tags:
        - Key: Name
          Value: company-tg
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'
      TargetType: ip
      VpcId: !ImportValue
        Fn::Sub: "${NetworkStackName}-VPCId"
  StudentTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /student/login
      HealthCheckPort: traffic-port
      Matcher:
        HttpCode: "200"
      Port: 8082
      Protocol: HTTP
      Tags:
        - Key: Name
          Value: student-tg
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'
      TargetType: ip
      VpcId: !ImportValue
        Fn::Sub: "${NetworkStackName}-VPCId"
  InternalALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internal
      SecurityGroups:
        - Fn::ImportValue: !Sub "${SGStackName}-InternalAlbSGId"
      Subnets:
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet1aId"
        - Fn::ImportValue: !Sub "${NetworkStackName}-PrivateSubnet1cId"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W52
            reason: "Disabled since this ALB only serves internal traffic and traffic analysis is not required; cost and operational overhead considerations."
  InternalALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: 
        - Type: forward
          TargetGroupArn: !Ref MessageApiTargetGroup
      LoadBalancerArn: !Ref InternalALB
      Port: 80
      Protocol: HTTP
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W56
            reason: "HTTP is allowed because this ALB only handles internal VPC traffic."
  MessageApiTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPath: /health
      HealthCheckPort: traffic-port
      Matcher:
        HttpCode: "200"
      Port: 8080
      Protocol: HTTP
      Tags:
        - Key: Name
          Value: message-api-tg
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: '60'
      TargetType: ip
      VpcId: !ImportValue
        Fn::Sub: "${NetworkStackName}-VPCId"

Outputs:
  # PublicALBArn:
  #   Description: ARN of the Public ALB
  #   Value: !Ref PublicALB
  #   Export:
  #     Name: !Sub "${AWS::StackName}-PublicALBArn"
  # PublicALBDNSName:
  #   Description: DNS Name of the Public ALB
  #   Value: !GetAtt PublicALB.DNSName
  #   Export:
  #     Name: !Sub "${AWS::StackName}-PublicALBDNSName"
  # PublicALBCanonicalHostedZoneId:
  #   Description: Canonical Hosted Zone ID of the Public ALB
  #   Value: !GetAtt PublicALB.CanonicalHostedZoneID
  #   Export:
  #     Name: !Sub "${AWS::StackName}-PublicALBCanonicalHostedZoneId"
  # PublicALBListenerArn:
  #   Description: ARN of the Public ALB Listener
  #   Value: !Ref PublicALBListener
  #   Export:
  #     Name: !Sub "${AWS::StackName}-PublicALBListenerArn"
  CompanyTargetGroupArn:
    Description: ARN of the Company Target Group
    Value: !Ref CompanyTargetGroup
    Export:
      Name: !Sub "${AWS::StackName}-CompanyTargetGroupArn"
  StudentTargetGroupArn:
    Description: ARN of the Student Target Group
    Value: !Ref StudentTargetGroup
    Export:
      Name: !Sub "${AWS::StackName}-StudentTargetGroupArn"
  InternalALBArn:
    Description: ARN of the Internal ALB
    Value: !Ref InternalALB
    Export:
      Name: !Sub "${AWS::StackName}-InternalALBArn"
  InternalALBDNSName:
    Description: DNS Name of the Internal ALB
    Value: !GetAtt InternalALB.DNSName
    Export:
      Name: !Sub "${AWS::StackName}-InternalALBDNSName"
  InternalALBCanonicalHostedZoneId:
    Description: Canonical Hosted Zone ID of the Internal ALB
    Value: !GetAtt InternalALB.CanonicalHostedZoneID
    Export:
      Name: !Sub "${AWS::StackName}-InternalALBCanonicalHostedZoneId"
  InternalALBListenerArn:
    Description: ARN of the Internal ALB Listener
    Value: !Ref InternalALBListener
    Export:
      Name: !Sub "${AWS::StackName}-InternalALBListenerArn"
  MessageApiTargetGroupArn:
    Description: ARN of the Message API Target Group
    Value: !Ref MessageApiTargetGroup
    Export:
      Name: !Sub "${AWS::StackName}-MessageApiTargetGroupArn"
