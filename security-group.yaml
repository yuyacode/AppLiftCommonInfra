AWSTemplateFormatVersion: '2010-09-09'
Description: Security Groups for the application stack including Laravel, Message API, RDS, and ALBs.

Parameters:
  NetworkStackName:
    Type: String
    Description: Name of the stack that manages the resources of the network system
  CompanyAppPort:
    Type: Number
    Description: Port number the company-facing Laravel application ECS service listens on.
  StudentAppPort:
    Type: Number
    Description: Port number the student-facing Laravel application ECS service listens on.
  MessageApiPort:
    Type: Number
    Description: Port number the Message API ECS service listens on.
  InternalAlbListenerPort:
    Type: Number
    Description: Listener port for the Internal ALB.
  DbPort:
    Type: Number
    Description: Database port for the RDS instance.

Resources:
  PublicAlbSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Public ALB Security Group (Rules defined separately)
      VpcId: !ImportValue
        Fn::Sub: "${NetworkStackName}-VPCId"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-PublicAlbSG
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W2
            reason: This SG is for a Public ALB, intentionally allowing ingress from 0.0.0.0/0 for public access, which is permissible for ELBs per W2 description.
          - id: W9
            reason: Public ALB must accept HTTP traffic from any IP on the internet, not restricted to /32.
  CompanyAppSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Company App Security Group (Rules defined separately)
      VpcId: !ImportValue
        Fn::Sub: "${NetworkStackName}-VPCId"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-CompanyAppSG
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W5
            reason: >
              Egress to 0.0.0.0/0 on port 443 is temporarily allowed as the specific outbound destinations required by the application (e.g., external APIs, AWS services) are not yet fully identified or finalized.
              This rule will be reviewed and tightened to specific endpoints or IP ranges based on the principle of least privilege once the application's communication requirements become clear.
  StudentAppSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Student App Security Group (Rules defined separately)
      VpcId: !ImportValue
        Fn::Sub: "${NetworkStackName}-VPCId"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-StudentAppSG
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W5
            reason: >
              Egress to 0.0.0.0/0 on port 443 is temporarily allowed as the specific outbound destinations required by the application (e.g., external APIs, AWS services) are not yet fully identified or finalized.
              This rule will be reviewed and tightened to specific endpoints or IP ranges based on the principle of least privilege once the application's communication requirements become clear.
  InternalAlbSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Internal ALB Security Group (Rules defined separately)
      VpcId: !ImportValue
        Fn::Sub: "${NetworkStackName}-VPCId"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-InternalAlbSG
  MessageApiSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Message API Security Group (Rules defined separately)
      VpcId: !ImportValue
        Fn::Sub: "${NetworkStackName}-VPCId"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-MessageApiSG
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W5
            reason: >
              Egress to 0.0.0.0/0 on port 443 is temporarily allowed as the specific outbound destinations required by the application (e.g., external APIs, AWS services) are not yet fully identified or finalized.
              This rule will be reviewed and tightened to specific endpoints or IP ranges based on the principle of least privilege once the application's communication requirements become clear.
  RdsSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: RDS Security Group (Rules defined separately)
      VpcId: !ImportValue
        Fn::Sub: "${NetworkStackName}-VPCId"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-RdsSG
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W5
            reason: >
              Egress to 0.0.0.0/0 on port 443 is temporarily allowed as the specific outbound destinations required by the application (e.g., external APIs, AWS services) are not yet fully identified or finalized.
              This rule will be reviewed and tightened to specific endpoints or IP ranges based on the principle of least privilege once the application's communication requirements become clear.
  PublicAlbSGIngressHttp:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow inbound HTTP from the internet to Public ALB
      GroupId: !Ref PublicAlbSG
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0
  PublicAlbSGIngressHttps:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow inbound HTTPS from the internet to Public ALB
      GroupId: !Ref PublicAlbSG
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: 0.0.0.0/0
  PublicAlbSGEgressToCompanyApp:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow outbound from Public ALB to Company App SG
      GroupId: !Ref PublicAlbSG
      IpProtocol: tcp
      FromPort: !Ref CompanyAppPort
      ToPort: !Ref CompanyAppPort
      DestinationSecurityGroupId: !Ref CompanyAppSG
  PublicAlbSGEgressToStudentApp:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow outbound from Public ALB to Student App SG
      GroupId: !Ref PublicAlbSG
      IpProtocol: tcp
      FromPort: !Ref StudentAppPort
      ToPort: !Ref StudentAppPort
      DestinationSecurityGroupId: !Ref StudentAppSG
  CompanyAppSGIngressFromPublicAlb:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow inbound from Public ALB SG to Company App
      GroupId: !Ref CompanyAppSG
      IpProtocol: tcp
      FromPort: !Ref CompanyAppPort
      ToPort: !Ref CompanyAppPort
      SourceSecurityGroupId: !Ref PublicAlbSG
  CompanyAppSGEgressToRds:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow outbound from Company App to RDS SG
      GroupId: !Ref CompanyAppSG
      IpProtocol: tcp
      FromPort: !Ref DbPort
      ToPort: !Ref DbPort
      DestinationSecurityGroupId: !Ref RdsSG
  CompanyAppSGEgressToInternalAlb:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow outbound from Company App to Internal ALB SG
      GroupId: !Ref CompanyAppSG
      IpProtocol: tcp
      FromPort: !Ref InternalAlbListenerPort
      ToPort: !Ref InternalAlbListenerPort
      DestinationSecurityGroupId: !Ref InternalAlbSG
  CompanyAppSGEgressToInternetHttps:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow outbound HTTPS from Company App to the internet
      GroupId: !Ref CompanyAppSG
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: 0.0.0.0/0
  StudentAppSGIngressFromPublicAlb:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow inbound from Public ALB SG to Student App
      GroupId: !Ref StudentAppSG
      IpProtocol: tcp
      FromPort: !Ref StudentAppPort
      ToPort: !Ref StudentAppPort
      SourceSecurityGroupId: !Ref PublicAlbSG
  StudentAppSGEgressToRds:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow outbound from Student App to RDS SG
      GroupId: !Ref StudentAppSG
      IpProtocol: tcp
      FromPort: !Ref DbPort
      ToPort: !Ref DbPort
      DestinationSecurityGroupId: !Ref RdsSG
  StudentAppSGEgressToInternalAlb:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow outbound from Student App to Internal ALB SG
      GroupId: !Ref StudentAppSG
      IpProtocol: tcp
      FromPort: !Ref InternalAlbListenerPort
      ToPort: !Ref InternalAlbListenerPort
      DestinationSecurityGroupId: !Ref InternalAlbSG
  StudentAppSGEgressToInternetHttps:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow outbound HTTPS from Student App to the internet
      GroupId: !Ref StudentAppSG
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: 0.0.0.0/0
  InternalAlbSGIngressFromCompanyApp:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow inbound from Company App SG to Internal ALB
      GroupId: !Ref InternalAlbSG
      IpProtocol: tcp
      FromPort: !Ref InternalAlbListenerPort
      ToPort: !Ref InternalAlbListenerPort
      SourceSecurityGroupId: !Ref CompanyAppSG
  InternalAlbSGIngressFromStudentApp:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow inbound from Student App SG to Internal ALB
      GroupId: !Ref InternalAlbSG
      IpProtocol: tcp
      FromPort: !Ref InternalAlbListenerPort
      ToPort: !Ref InternalAlbListenerPort
      SourceSecurityGroupId: !Ref StudentAppSG
  InternalAlbSGEgressToMessageApi:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow outbound from Internal ALB to Message API SG
      GroupId: !Ref InternalAlbSG
      IpProtocol: tcp
      FromPort: !Ref MessageApiPort
      ToPort: !Ref MessageApiPort
      DestinationSecurityGroupId: !Ref MessageApiSG
  MessageApiSGIngressFromInternalAlb:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow inbound from Internal ALB SG to Message API
      GroupId: !Ref MessageApiSG
      IpProtocol: tcp
      FromPort: !Ref MessageApiPort
      ToPort: !Ref MessageApiPort
      SourceSecurityGroupId: !Ref InternalAlbSG
  MessageApiSGEgressToRds:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow outbound from Message API to RDS SG
      GroupId: !Ref MessageApiSG
      IpProtocol: tcp
      FromPort: !Ref DbPort
      ToPort: !Ref DbPort
      DestinationSecurityGroupId: !Ref RdsSG
  MessageApiSGEgressToInternetHttps:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Allow outbound HTTPS from Message API to the internet
      GroupId: !Ref MessageApiSG
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: 0.0.0.0/0
  RdsSGIngressFromCompanyApp:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow inbound DB connections from Company App SG to RDS
      GroupId: !Ref RdsSG
      IpProtocol: tcp
      FromPort: !Ref DbPort
      ToPort: !Ref DbPort
      SourceSecurityGroupId: !Ref CompanyAppSG
  RdsSGIngressFromStudentApp:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow inbound DB connections from Student App SG to RDS
      GroupId: !Ref RdsSG
      IpProtocol: tcp
      FromPort: !Ref DbPort
      ToPort: !Ref DbPort
      SourceSecurityGroupId: !Ref StudentAppSG
  RdsSGIngressFromMessageApi:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow inbound DB connections from Message API SG to RDS
      GroupId: !Ref RdsSG
      IpProtocol: tcp
      FromPort: !Ref DbPort
      ToPort: !Ref DbPort
      SourceSecurityGroupId: !Ref MessageApiSG
  RdsSGEgressAllowAllTemporary:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: >
        Allows all outbound traffic explicitly, primarily to address cfn-nag F1000.
        The specific outbound requirements for this RDS instance (e.g., for OS patches, metrics, AWS APIs) have not yet been fully determined.
        This rule is intended as a temporary measure and should be reviewed and restricted to only necessary connections once the requirements are clarified to adhere to the principle of least privilege.
      GroupId: !Ref RdsSG
      IpProtocol: tcp
      CidrIp: 0.0.0.0/0

Outputs:
  PublicAlbSGId:
    Description: Security Group ID for the Public ALB
    Value: !GetAtt PublicAlbSG.GroupId
    Export:
      Name: !Sub ${AWS::StackName}-PublicAlbSGId
  CompanyAppSGId:
    Description: Security Group ID for the Company App ECS Service
    Value: !GetAtt CompanyAppSG.GroupId
    Export:
      Name: !Sub ${AWS::StackName}-CompanyAppSGId
  StudentAppSGId:
    Description: Security Group ID for the Student App ECS Service
    Value: !GetAtt StudentAppSG.GroupId
    Export:
      Name: !Sub ${AWS::StackName}-StudentAppSGId
  InternalAlbSGId:
    Description: Security Group ID for the Internal ALB
    Value: !GetAtt InternalAlbSG.GroupId
    Export:
      Name: !Sub ${AWS::StackName}-InternalAlbSGId
  MessageApiSGId:
    Description: Security Group ID for the Message API ECS Service
    Value: !GetAtt MessageApiSG.GroupId
    Export:
      Name: !Sub ${AWS::StackName}-MessageApiSGId
  RdsSGId:
    Description: Security Group ID for the RDS Instance
    Value: !GetAtt RdsSG.GroupId
    Export:
      Name: !Sub ${AWS::StackName}-RdsSGId
