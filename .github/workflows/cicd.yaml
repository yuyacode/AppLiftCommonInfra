name: CI/CD

on:
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  cfn-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install cfn-lint
        run: pip install cfn-lint

      - name: Add cfn-lint problem matcher
        run: echo "::add-matcher::.github/cfn-lint.json"

      - name: Run cfn-lint
        run: |
          files="gha-oidc-provisioner-role-setup.yaml iam_role_for_deployment.yaml network-stack.yaml security-group.yaml db.yaml"
          for file in $files; do
            cfn-lint "$file" -f parseable
          done

  cfn-nag:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'

      - name: Install cfn-nag
        run: gem install cfn-nag

      - name: Run cfn-nag
        run: |
          files="gha-oidc-provisioner-role-setup.yaml iam_role_for_deployment.yaml network-stack.yaml security-group.yaml db.yaml"
          for file in $files; do
            cfn_nag "$file"
          done

  create_iam_role_for_deployment:
    needs: [cfn-lint, cfn-nag]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.IAM_ROLE_STACK_DEPLOYMENT_ROLE_ARN }}
          aws-region: ap-northeast-1

      - name: Create IAM Role For Deployment
        run: |
          aws cloudformation deploy \
            --template-file iam_role_for_deployment.yaml \
            --stack-name IAM-Role-For-Deployment \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM \
            --parameter-overrides GitHubOIDCProviderArn=${{ secrets.GH_OIDC_PROVIDER_ARN }} \
            --parameter-overrides GHAOIDCProvisionerROLESetupStackName=GHA-OIDC-Provisioner-ROLE-Setup

  deploy-network-stack:
    needs: [create_iam_role_for_deployment]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.NETWORK_RESOURCE_DEPLOYMENT_ROLE_ARN }}
          aws-region: ap-northeast-1

      - name: Deploy Network Stack
        run: |
          aws cloudformation deploy \
            --template-file network-stack.yaml \
            --stack-name Network-Stack

  deploy-security-group:
    needs: [deploy-network-stack]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.SECURITY_GROUP_DEPLOYMENT_ROLE_ARN }}
          aws-region: ap-northeast-1

      - name: Deploy Security Group
        run: |
          aws cloudformation deploy \
            --template-file security-group.yaml \
            --stack-name Security-Group \
            --parameter-overrides \
              NetworkStackName=Network-Stack \
              CompanyAppPort=8081 \
              StudentAppPort=8082 \
              MessageApiPort=8080 \
              InternalAlbListenerPort=80 \
              DbPort=3306

  deploy-db:
    needs: [deploy-security-group]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.DB_DEPLOYMENT_ROLE_ARN }}
          aws-region: ap-northeast-1

      - name: Deploy DB
        run: |
          aws cloudformation deploy \
            --template-file db.yaml \
            --stack-name DB \
            --parameter-overrides \
              NetworkStackName=Network-Stack \
              SGStackName=Security-Group \
              MasterUsername=master \
              DBInstanceClass=db.t4g.medium \
              EngineVersion=8.0.mysql_aurora.3.08.2 \
              ShouldCreateReadReplica=false
