AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This CloudFormation template creates an IAM Role that allow GitHub Actions to assume the role and deploy AWS resources securely.
  This single template can be expanded in the future to include multiple roles for various resource types.

Parameters:
  GitHubOIDCProviderArn:
    Type: String
  GHAOIDCProvisionerROLESetupStackName:
    Type: String
    Description: Specifies the name of the stack responsible for provisioning OIDC components, the associated IAM role, and the CloudFormation management policy.
  TargetHostedZoneId:
    Type: String
    Description: The Route 53 Hosted Zone ID where DNS validation records for the ACM certificate will be created.
    AllowedPattern: "^Z[A-Z0-9]+$"
    ConstraintDescription: The Hosted Zone ID must start with 'Z' and consist of uppercase letters and numbers.
  ExecutionRoleStackName:
    Type: String
  CompanyRoleStackName:
    Type: String
  StudentRoleStackName:
    Type: String
  MessageAPIRoleStackName:
    Type: String

Resources:
  NetworkResourceDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: NetworkResourceDeploymentRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProviderArn
            Action: 
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                "token.actions.githubusercontent.com:sub": "repo:yuyacode/AppLiftCommonInfra:*"
      ManagedPolicyArns:
        - Fn::ImportValue: !Sub "${GHAOIDCProvisionerROLESetupStackName}-CloudFormationStackManagementPolicyArn"
      Policies:
        - PolicyName: "VpcManagementPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:CreateVpc"
                  - "ec2:DeleteVpc"
                  - "ec2:ModifyVpcAttribute"
                  - "ec2:CreateTags"
                  - "ec2:DeleteTags"
                  - "ec2:DescribeVpcs"
                  - "ec2:DescribeVpcAttribute"
                  - "ec2:DescribeAccountAttributes"
                  - "ec2:DescribeTags"
                  - "ec2:DescribeAvailabilityZones"
                Resource: "*"
        - PolicyName: "SubnetManagementPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:CreateSubnet"
                  - "ec2:DeleteSubnet"
                  - "ec2:DescribeSubnets"
                  - "ec2:ModifySubnetAttribute"
                  - "ec2:CreateTags"
                  - "ec2:DeleteTags"
                Resource: "*"
        - PolicyName: InternetGatewayManagementPolicy 
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:CreateInternetGateway"
                  - "ec2:DescribeInternetGateways"
                  - "ec2:DeleteInternetGateway"
                  - "ec2:AttachInternetGateway"
                  - "ec2:DetachInternetGateway"
                Resource: "*"
        - PolicyName: RouteTableManagementPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:CreateRouteTable"
                  - "ec2:DescribeRouteTables"
                  - "ec2:DeleteRouteTable"
                Resource: "*"
        - PolicyName: RouteManagementPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:CreateRoute"
                  - "ec2:DeleteRoute"
                Resource: "*"
        - PolicyName: RouteAssociationManagementPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:AssociateRouteTable"
                  - "ec2:DisassociateRouteTable"
                Resource: "*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: >
              This IAM role is assumed by GitHub Actions for infrastructure deployment using CloudFormation templates.
              The templates dynamically create and manage various AWS resources.
              Due to the dynamic and flexible nature of the deployment process, it is not feasible to predefine specific resource ARNs.
              Instead, the policy strictly limits allowed actions to the minimum set necessary for infrastructure provisioning.
          - id: W28
            reason: "Fixed role name is required so that GitHub Actions can reliably assume this IAM role using its ARN."
  SecurityGroupDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SecurityGroupDeploymentRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProviderArn
            Action: 
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                "token.actions.githubusercontent.com:sub": "repo:yuyacode/AppLiftCommonInfra:*"
      ManagedPolicyArns:
        - Fn::ImportValue: !Sub "${GHAOIDCProvisionerROLESetupStackName}-CloudFormationStackManagementPolicyArn"
      Policies:
        - PolicyName: "SecurityGroupManagementPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:CreateSecurityGroup
                  - ec2:DeleteSecurityGroup
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:UpdateSecurityGroupRuleDescriptionsIngress
                  - ec2:AuthorizeSecurityGroupEgress
                  - ec2:RevokeSecurityGroupEgress
                  - ec2:UpdateSecurityGroupRuleDescriptionsEgress
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeSecurityGroupRules
                  - ec2:CreateTags
                  - ec2:DeleteTags
                  - ec2:DescribeVpcs
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DescribeSubnets
                  - ec2:DescribeTags
                Resource: "*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: >
              This IAM role is assumed by GitHub Actions for infrastructure deployment using CloudFormation templates.
              The templates dynamically create and manage various AWS resources.
              Due to the dynamic and flexible nature of the deployment process, it is not feasible to predefine specific resource ARNs.
              Instead, the policy strictly limits allowed actions to the minimum set necessary for infrastructure provisioning.
          - id: W28
            reason: "Fixed role name is required so that GitHub Actions can reliably assume this IAM role using its ARN."
  DBDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: DBDeploymentRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProviderArn
            Action: 
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                "token.actions.githubusercontent.com:sub": "repo:yuyacode/AppLiftCommonInfra:*"
      ManagedPolicyArns:
        - Fn::ImportValue: !Sub "${GHAOIDCProvisionerROLESetupStackName}-CloudFormationStackManagementPolicyArn"
      Policies:
        - PolicyName: "AllowPassRoleToCloudFormationPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: "*"
                Condition:
                  StringEquals:
                    iam:PassedToService: cloudformation.amazonaws.com
        - PolicyName: "RDSManagementPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  # DB Subnet Group
                  - rds:CreateDBSubnetGroup
                  - rds:DescribeDBSubnetGroups
                  - rds:DeleteDBSubnetGroup
                  - rds:ModifyDBSubnetGroup
                  # DB Cluster Parameter Group
                  - rds:CreateDBClusterParameterGroup
                  - rds:DescribeDBClusterParameterGroups
                  - rds:DescribeDBClusterParameters
                  - rds:DeleteDBClusterParameterGroup
                  - rds:ModifyDBClusterParameterGroup
                  # DB Parameter Group
                  - rds:CreateDBParameterGroup
                  - rds:DescribeDBParameterGroups
                  - rds:DescribeDBParameters
                  - rds:DeleteDBParameterGroup
                  - rds:ModifyDBParameterGroup
                  # DB Cluster
                  - rds:CreateDBCluster
                  - rds:DescribeDBClusters
                  - rds:DeleteDBCluster
                  - rds:ModifyDBCluster
                  # DB Instance
                  - rds:CreateDBInstance
                  - rds:DescribeDBInstances
                  - rds:DeleteDBInstance
                  - rds:ModifyDBInstance
                  # Common RDS actions (Tags, Defaults etc.)
                  - rds:AddTagsToResource
                  - rds:RemoveTagsFromResource
                  - rds:ListTagsForResource
                  - rds:DescribeEngineDefaultParameters
                  - rds:DescribeEngineDefaultClusterParameters
                Resource: "*"
        - PolicyName: "SecretsManagerManagementPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:CreateSecret
                  - secretsmanager:DescribeSecret
                  - secretsmanager:DeleteSecret
                  - secretsmanager:UpdateSecret
                  - secretsmanager:GetSecretValue
                  - secretsmanager:GetRandomPassword
                  - secretsmanager:TagResource
                  - secretsmanager:UntagResource
                  - secretsmanager:PutSecretValue
                  - secretsmanager:PutResourcePolicy
                  - secretsmanager:UpdateSecretVersionStage
                Resource: "*"
        - PolicyName: "SecretsManagerKMSSupportPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kms:DescribeKey
                Resource: "*"
        - PolicyName: "EC2NetworkForRDSDescribePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeVpcs
                  - ec2:DescribeSubnets
                  - ec2:DescribeAvailabilityZones
                  - ec2:DescribeSecurityGroups
                Resource: "*"
        - PolicyName: "ServiceLinkedRoleForRDSCreatePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - iam:CreateServiceLinkedRole
                Resource: "*"
                Condition:
                  StringLike:
                    iam:AWSServiceName:
                      - rds.amazonaws.com
                      - monitoring.rds.amazonaws.com
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F38
            reason: "iam:PassRole with Resource '*' is mitigated by Condition restricting PassedToService to cloudformation.amazonaws.com."
          - id: W11
            reason: >
              This IAM role is assumed by GitHub Actions for infrastructure deployment using CloudFormation templates.
              The templates dynamically create and manage various AWS resources.
              Due to the dynamic and flexible nature of the deployment process, it is not feasible to predefine specific resource ARNs.
              Instead, the policy strictly limits allowed actions to the minimum set necessary for infrastructure provisioning.
          - id: W28
            reason: "Fixed role name is required so that GitHub Actions can reliably assume this IAM role using its ARN."
  ECRRepositoryDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ECRRepositoryDeploymentRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProviderArn
            Action: 
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                token.actions.githubusercontent.com:sub:
                  - repo:yuyacode/AppLift:*
                  - repo:yuyacode/AppLiftMessageApi:*
      ManagedPolicyArns:
        - Fn::ImportValue: !Sub "${GHAOIDCProvisionerROLESetupStackName}-CloudFormationStackManagementPolicyArn"
      Policies:
        - PolicyName: "ECRRepositoryManagementPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:CreateRepository"
                  - "ecr:DescribeRepositories"
                  - "ecr:DeleteRepository"
                  - "ecr:PutImageScanningConfiguration"
                  - "ecr:PutLifecyclePolicy"
                  - "ecr:GetLifecyclePolicy"
                  - "ecr:ListImages"
                  - "ecr:BatchDeleteImage"
                Resource: "*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: >
              This IAM role is assumed by GitHub Actions for infrastructure deployment using CloudFormation templates.
              The templates dynamically create and manage various AWS resources.
              Due to the dynamic and flexible nature of the deployment process, it is not feasible to predefine specific resource ARNs.
              Instead, the policy strictly limits allowed actions to the minimum set necessary for infrastructure provisioning.
          - id: W28
            reason: "Fixed role name is required so that GitHub Actions can reliably assume this IAM role using its ARN."
  ECRImagePushRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ECRImagePushRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProviderArn
            Action: 
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: 'sts.amazonaws.com'
              StringLike:
                token.actions.githubusercontent.com:sub:
                  - repo:yuyacode/AppLift:*
                  - repo:yuyacode/AppLiftMessageApi:*
      Policies:
        - PolicyName: "ECRLoginAndPushImagePolicy"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:CompleteLayerUpload
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                Resource: "*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: >
              This IAM role is assumed by GitHub Actions for infrastructure deployment using CloudFormation templates.
              The templates dynamically create and manage various AWS resources.
              Due to the dynamic and flexible nature of the deployment process, it is not feasible to predefine specific resource ARNs.
              Instead, the policy strictly limits allowed actions to the minimum set necessary for infrastructure provisioning.
          - id: W28
            reason: "Fixed role name is required so that GitHub Actions can reliably assume this IAM role using its ARN."
  LogGroupDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LogGroupDeploymentRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProviderArn
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                token.actions.githubusercontent.com:sub:
                  - repo:yuyacode/AppLift:*
                  - repo:yuyacode/AppLiftMessageApi:*
      ManagedPolicyArns:
        - Fn::ImportValue: !Sub "${GHAOIDCProvisionerROLESetupStackName}-CloudFormationStackManagementPolicyArn"
      Policies:
        - PolicyName: "LogGroupManagementPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                  - logs:DeleteLogGroup
                  - logs:PutRetentionPolicy
                  - logs:TagResource
                Resource: "*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: >
              This IAM role is assumed by GitHub Actions for infrastructure deployment using CloudFormation templates.
              The templates dynamically create and manage various AWS resources.
              Due to the dynamic and flexible nature of the deployment process, it is not feasible to predefine specific resource ARNs.
              Instead, the policy strictly limits allowed actions to the minimum set necessary for infrastructure provisioning.
          - id: W28
            reason: "Fixed role name is required so that GitHub Actions can reliably assume this IAM role using its ARN."
  ECSClusterDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ECSClusterDeploymentRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProviderArn
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                "token.actions.githubusercontent.com:sub": "repo:yuyacode/AppLiftCommonInfra:*"
      ManagedPolicyArns:
        - Fn::ImportValue: !Sub "${GHAOIDCProvisionerROLESetupStackName}-CloudFormationStackManagementPolicyArn"
      Policies:
        - PolicyName: "ECSClusterManagementPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecs:CreateCluster
                  - ecs:DescribeClusters
                  - ecs:UpdateCluster
                  - ecs:UpdateClusterSettings
                  - ecs:DeleteCluster
                  - ecs:TagResource
                  - ecs:UntagResource
                Resource: "*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: >
              This IAM role is assumed by GitHub Actions for infrastructure deployment using CloudFormation templates.
              The templates dynamically create and manage various AWS resources.
              Due to the dynamic and flexible nature of the deployment process, it is not feasible to predefine specific resource ARNs.
              Instead, the policy strictly limits allowed actions to the minimum set necessary for infrastructure provisioning.
          - id: W28
            reason: "Fixed role name is required so that GitHub Actions can reliably assume this IAM role using its ARN."
  DomainCertificateDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: DomainCertificateDeploymentRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProviderArn
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                "token.actions.githubusercontent.com:sub": "repo:yuyacode/AppLiftCommonInfra:*"
      ManagedPolicyArns:
        - Fn::ImportValue: !Sub "${GHAOIDCProvisionerROLESetupStackName}-CloudFormationStackManagementPolicyArn"
      Policies:
        - PolicyName: "ACMCertificateAndRoute53ManagementPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - acm:RequestCertificate
                  - acm:DescribeCertificate
                  - acm:DeleteCertificate
                  - acm:ListTagsForCertificate
                  - acm:AddTagsToCertificate
                  - acm:RemoveTagsFromCertificate
                Resource: !Sub "arn:aws:acm:${AWS::Region}:${AWS::AccountId}:certificate/*"
              - Effect: Allow
                Action:
                  - route53:ChangeResourceRecordSets
                  - route53:ListResourceRecordSets
                Resource: !Sub "arn:aws:route53:::hostedzone/${TargetHostedZoneId}"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: "Fixed role name is required so that GitHub Actions can reliably assume this IAM role using its ARN."
  SecretsManagerDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SecretsManagerDeploymentRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProviderArn
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                token.actions.githubusercontent.com:sub:
                  - repo:yuyacode/AppLift:*
                  - repo:yuyacode/AppLiftMessageApi:*
      ManagedPolicyArns:
        - Fn::ImportValue: !Sub "${GHAOIDCProvisionerROLESetupStackName}-CloudFormationStackManagementPolicyArn"
      Policies:
        - PolicyName: "SecretsManagerManagementPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:CreateSecret
                  - secretsmanager:DescribeSecret
                  - secretsmanager:DeleteSecret
                  - secretsmanager:UpdateSecret
                  - secretsmanager:TagResource
                  - secretsmanager:UntagResource
                Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"
        - PolicyName: "SecretsManagerKMSSupportPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kms:DescribeKey
                Resource: "*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: >
              The kms:DescribeKey on Resource: '*' is used to ensure Secrets Manager can reliably describe its default AWS-managed KMS key during CloudFormation operations.
              This read-only access mitigates deployment issues due to the difficulty of precisely targeting the default key's ARN.
          - id: W28
            reason: "Fixed role name is required so that GitHub Actions can reliably assume this IAM role using its ARN."
  ECSServiceTaskDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ECSServiceTaskDeploymentRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProviderArn
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                token.actions.githubusercontent.com:sub:
                  - repo:yuyacode/AppLift:*
                  - repo:yuyacode/AppLiftMessageApi:*
      ManagedPolicyArns:
        - Fn::ImportValue: !Sub "${GHAOIDCProvisionerROLESetupStackName}-CloudFormationStackManagementPolicyArn"
      Policies:
        - PolicyName: ECSManagementPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecs:RegisterTaskDefinition
                  - ecs:DeregisterTaskDefinition
                  - ecs:DescribeTaskDefinition
                  - ecs:CreateService
                  - ecs:UpdateService
                  - ecs:DeleteService
                  - ecs:DescribeServices
                  - ecs:DescribeClusters
                  - ecs:TagResource
                  - ecs:UntagResource
                  - ecs:ListTagsForResource
                Resource: "*"
        - PolicyName: IAMPassRoleAndGetRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: iam:GetRole
                Resource:
                  - !ImportValue
                      Fn::Sub: "${ExecutionRoleStackName}-Arn"
                  - !ImportValue
                      Fn::Sub: "${CompanyRoleStackName}-ECSTaskRoleArn"
                  - !ImportValue
                      Fn::Sub: "${StudentRoleStackName}-ECSTaskRoleArn"
                  - !ImportValue
                      Fn::Sub: "${MessageAPIRoleStackName}-ECSTaskRoleArn"
              - Effect: Allow
                Action: iam:PassRole
                Resource:
                  - !ImportValue
                      Fn::Sub: "${ExecutionRoleStackName}-Arn"
                  - !ImportValue
                      Fn::Sub: "${CompanyRoleStackName}-ECSTaskRoleArn"
                  - !ImportValue
                      Fn::Sub: "${StudentRoleStackName}-ECSTaskRoleArn"
                  - !ImportValue
                      Fn::Sub: "${MessageAPIRoleStackName}-ECSTaskRoleArn"
                Condition:
                  StringEqualsIfExists:
                    "iam:PassedToService": "ecs-tasks.amazonaws.com"
        - PolicyName: CloudWatchLogsManagementPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DescribeLogGroups
                  - logs:DeleteLogGroup
                  - logs:PutRetentionPolicy
                  - logs:TagResource
                  - logs:UntagResource
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:*"
        - PolicyName: DependencyValidationPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: secretsmanager:DescribeSecret
                Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:*"
              - Effect: Allow
                Action:
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeNetworkInterfaces
                Resource: "*"
              - Effect: Allow
                Action:
                  - elasticloadbalancing:DescribeTargetGroups
                  - elasticloadbalancing:DescribeListeners
                Resource: "*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: >
              This IAM role is assumed by GitHub Actions for infrastructure deployment using CloudFormation templates.
              The templates dynamically create and manage various AWS resources.
              Due to the dynamic and flexible nature of the deployment process, it is not feasible to predefine specific resource ARNs.
              Instead, the policy strictly limits allowed actions to the minimum set necessary for infrastructure provisioning.
          - id: W28
            reason: "Fixed role name is required so that GitHub Actions can reliably assume this IAM role using its ARN."
          - id: W76
            reason: >
              Policy complexity (SPCM > 25) is acknowledged.
              The current comprehensive scope is intentional for this CI/CD role to avoid over-fragmentation at this stage.
              The policy structure will be reassessed if future modifications significantly increase its complexity.
  ALBDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ALBDeploymentRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref GitHubOIDCProviderArn
            Action:
              - "sts:AssumeRoleWithWebIdentity"
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                "token.actions.githubusercontent.com:sub": "repo:yuyacode/AppLiftCommonInfra:*"
      ManagedPolicyArns:
        - Fn::ImportValue: !Sub "${GHAOIDCProvisionerROLESetupStackName}-CloudFormationStackManagementPolicyArn"
      Policies:
        - PolicyName: ALBManagementPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - elasticloadbalancing:CreateLoadBalancer
                  - elasticloadbalancing:DeleteLoadBalancer
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:CreateListener
                  - elasticloadbalancing:DeleteListener
                  - elasticloadbalancing:DescribeListeners
                  - elasticloadbalancing:CreateRule
                  - elasticloadbalancing:DeleteRule
                  - elasticloadbalancing:DescribeRules
                  - elasticloadbalancing:CreateTargetGroup
                  - elasticloadbalancing:DeleteTargetGroup
                  - elasticloadbalancing:DescribeTargetGroups
                  - elasticloadbalancing:ModifyTargetGroupAttributes
                  - elasticloadbalancing:RegisterTargets
                  - elasticloadbalancing:DeregisterTargets
                Resource: "*"
        - PolicyName: EC2DescribePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeVpcs
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeTags
                Resource: "*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: >
              This IAM role is assumed by GitHub Actions for infrastructure deployment using CloudFormation templates.
              The templates dynamically create and manage various AWS resources.
              Due to the dynamic and flexible nature of the deployment process, it is not feasible to predefine specific resource ARNs.
              Instead, the policy strictly limits allowed actions to the minimum set necessary for infrastructure provisioning.
          - id: W28
            reason: "Fixed role name is required so that GitHub Actions can reliably assume this IAM role using its ARN."

Outputs:
  NetworkResourceDeploymentRoleArn:
    Description: "ARN of the IAM Role for network resource deployment"
    Value: !GetAtt NetworkResourceDeploymentRole.Arn
  SecurityGroupDeploymentRoleArn:
    Description: "ARN of the IAM Role for security group deployment"
    Value: !GetAtt SecurityGroupDeploymentRole.Arn
  DBDeploymentRoleArn:
    Description: "ARN of the IAM Role for db deployment"
    Value: !GetAtt DBDeploymentRole.Arn
  ECRRepositoryDeploymentRoleArn:
    Description: "ARN of the IAM Role for ecr repository deployment"
    Value: !GetAtt ECRRepositoryDeploymentRole.Arn
  ECRImagePushRoleArn:
    Description: "ARN of the IAM Role for ecr image push"
    Value: !GetAtt ECRImagePushRole.Arn
  LogGroupDeploymentRoleArn:
    Description: "ARN of the IAM Role for log group deployment"
    Value: !GetAtt LogGroupDeploymentRole.Arn
  ECSClusterDeploymentRoleArn:
    Description: "ARN of the IAM Role for ecs cluster deployment"
    Value: !GetAtt ECSClusterDeploymentRole.Arn
  DomainCertificateDeploymentRoleArn:
    Description: "ARN of the IAM Role for domain and certificate deployment"
    Value: !GetAtt DomainCertificateDeploymentRole.Arn
  SecretsManagerDeploymentRoleArn:
    Description: "ARN of the IAM Role for secrets manager deployment"
    Value: !GetAtt SecretsManagerDeploymentRole.Arn
  ECSServiceTaskDeploymentRoleArn:
    Description: "ARN of the IAM Role for ECS Service and Task deployment"
    Value: !GetAtt ECSServiceTaskDeploymentRole.Arn
  ALBDeploymentRoleArn:
    Description: "ARN of the IAM Role for ALB deployment"
    Value: !GetAtt ALBDeploymentRole.Arn
